{"ast":null,"code":"var _jsxFileName = \"/Users/frank/code/TOP/repos/sites/setlist/client/src/components/searchbar/searchbar.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport styles from '../../styles/searchbar.module.css';\nimport Options from './searchbar-options';\nimport LoadingSVG from '../svg/loading.js';\nimport { AppContext } from '../../App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Searchbar = _ref => {\n  _s();\n  let {\n    requestAuthLink,\n    createPlaylist\n  } = _ref;\n  const {\n    creatingPlaylist,\n    authenticated,\n    authenticating\n  } = useContext(AppContext);\n  const [url, setUrl] = useState('');\n  const [options, setOptions] = useState(false);\n  const [arrow, setArrow] = useState(false);\n  function toggleOptions() {\n    setArrow(!arrow);\n    setOptions(!options);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.searchbar,\n    children: [!authenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.auth,\n      onClick: requestAuthLink,\n      children: [authenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Connecting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LoadingSVG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), !authenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"First, Connect Your Spotify Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: styles.url,\n        name: \"searchbar\",\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        placeholder: \"Setlist Link\",\n        pattern: \".*setlist\\\\.fm.*\",\n        title: \"Must be a setlist.fm link\",\n        required: true,\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionsButton,\n        onClick: toggleOptions,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: arrow ? styles.arrow : '',\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), options && /*#__PURE__*/_jsxDEV(Options, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.searchButton,\n        onClick: () => createPlaylist(url),\n        children: creatingPlaylist ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Creating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LoadingSVG, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : 'Create Playlist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Searchbar, \"DJATvBFPWHZYswKGZKyF2IGvNIs=\");\n_c = Searchbar;\nexport default Searchbar;\nvar _c;\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"names":["useState","useContext","styles","Options","LoadingSVG","AppContext","Searchbar","requestAuthLink","createPlaylist","creatingPlaylist","authenticated","authenticating","url","setUrl","options","setOptions","arrow","setArrow","toggleOptions","searchbar","auth","form","e","target","value","optionsButton","searchButton"],"sources":["/Users/frank/code/TOP/repos/sites/setlist/client/src/components/searchbar/searchbar.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport styles from '../../styles/searchbar.module.css';\nimport Options from './searchbar-options';\nimport LoadingSVG from '../svg/loading.js';\nimport { AppContext } from '../../App.js';\n\nconst Searchbar = ({ requestAuthLink, createPlaylist }) => {\n\n  const { creatingPlaylist, authenticated, authenticating } = useContext(AppContext);\n\n  const [url, setUrl] = useState('');\n  const [options, setOptions] = useState(false);\n  const [arrow, setArrow] = useState(false);\n\n  function toggleOptions() {\n    setArrow(!arrow);\n    setOptions(!options);\n  }\n\n  return (\n    <div className={styles.searchbar}>\n      { !authenticated &&\n        <button type=\"button\" className={styles.auth} onClick={requestAuthLink}>\n          { authenticating &&\n            <div>\n              <span>Connecting</span>\n              <LoadingSVG />\n            </div>\n          }\n          { !authenticating &&\n            <div>\n              <span>First, Connect Your Spotify Account</span>\n            </div>\n          }\n        </button>\n      }\n      <form className={styles.form}>\n        <input\n          type=\"text\"\n          className={styles.url}\n          name=\"searchbar\"\n          spellCheck=\"false\"\n          autoComplete=\"off\"\n          placeholder=\"Setlist Link\"\n          pattern=\".*setlist\\.fm.*\"\n          title=\"Must be a setlist.fm link\"\n          required\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n        />\n        <div className={styles.optionsButton} onClick={toggleOptions}>\n          <span>Options</span>\n          <svg className={arrow ? styles.arrow : ''} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4Z\"/>\n          </svg>\n        </div>\n        { options && <Options /> }\n        <button type=\"button\" className={styles.searchButton} onClick={() => createPlaylist(url)}>\n          { creatingPlaylist ?\n            <div>\n              <span>Creating</span>\n              <LoadingSVG />\n            </div>\n          :\n            'Create Playlist' }\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Searchbar\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}