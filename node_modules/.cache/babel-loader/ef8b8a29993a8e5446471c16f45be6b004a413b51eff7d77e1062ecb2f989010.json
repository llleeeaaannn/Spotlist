{"ast":null,"code":"var _jsxFileName = \"/Users/frank/code/TOP/repos/sites/setlist/client/src/components/playlist/covers.js\";\nimport styles from '../../styles/playlist.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Covers = _ref => {\n  let {\n    songs\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.unfound,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"There \", songs.length === 1 ? `was also ${songs.length} cover` : `were also ${songs.length} covers`, \" on the setlist which \", songs.length === 1 ? `wasn't` : `weren't`, \" included in the playlist:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.unfoundList,\n      children: songs.map((song, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [song.name, \" by \", song.artist]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Covers;\nexport default Covers;\nvar _c;\n$RefreshReg$(_c, \"Covers\");","map":{"version":3,"names":["styles","Covers","songs","unfound","length","unfoundList","map","song","i","name","artist"],"sources":["/Users/frank/code/TOP/repos/sites/setlist/client/src/components/playlist/covers.js"],"sourcesContent":["import styles from '../../styles/playlist.module.css';\n\nconst Covers = ({ songs }) => {\n\n  return (\n    <div className={styles.unfound}>\n      <h3>There { songs.length === 1 ? `was also ${songs.length} cover` : `were also ${songs.length} covers` } on the setlist which { songs.length === 1 ? `wasn't` : `weren't`} included in the playlist:</h3>\n      <div className={styles.unfoundList}>\n        { songs.map((song, i) => (\n          <span key={i}>{ song.name } by {song.artist}</span>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Covers\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,kCAAkC;AAAC;AAEtD,MAAMC,MAAM,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EAEvB,oBACE;IAAK,SAAS,EAAEF,MAAM,CAACG,OAAQ;IAAA,wBAC7B;MAAA,qBAAYD,KAAK,CAACE,MAAM,KAAK,CAAC,GAAI,YAAWF,KAAK,CAACE,MAAO,QAAO,GAAI,aAAYF,KAAK,CAACE,MAAO,SAAQ,4BAA0BF,KAAK,CAACE,MAAM,KAAK,CAAC,GAAI,QAAO,GAAI,SAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eACzM;MAAK,SAAS,EAAEJ,MAAM,CAACK,WAAY;MAAA,UAC/BH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAClB;QAAA,WAAgBD,IAAI,CAACE,IAAI,UAAOF,IAAI,CAACG,MAAM;MAAA,GAAhCF,CAAC;QAAA;QAAA;QAAA;MAAA,QACb;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KAZKP,MAAM;AAcZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}