{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frank/code/TOP/repos/sites/spotlist/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/frank/code/TOP/repos/sites/spotlist/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useEffect,useContext}from'react';import{useNavigate}from'react-router-dom';import styles from'../styles/home.module.css';import Searchbar from'../components/searchbar/searchbar';import{linkRegex,backendAPI}from'../variables.js';import{AppContext}from'../App.js';import{parseSetlistLink,getNowTime}from'../methods/methods.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useContext=useContext(AppContext),setPlaylistID=_useContext.setPlaylistID,setPlaylistLink=_useContext.setPlaylistLink,setUnfoundSongs=_useContext.setUnfoundSongs,setCoverSongs=_useContext.setCoverSongs,setCreatingPlaylist=_useContext.setCreatingPlaylist,playlistName=_useContext.playlistName,setPlaylistName=_useContext.setPlaylistName,playlistDescription=_useContext.playlistDescription,setPlaylistDescription=_useContext.setPlaylistDescription,setAuthenticated=_useContext.setAuthenticated,setAuthenticating=_useContext.setAuthenticating,setSetlistError=_useContext.setSetlistError,setAuthError=_useContext.setAuthError;var accessToken;var navigate=useNavigate();var TOKEN=\"https://accounts.spotify.com/api/token\";useEffect(function(){checkForAccessToken();onPageLoad();},[]);function checkForAccessToken(){var access=localStorage.getItem('access');if(access===null)return setAuthenticated(false);var accessJSON=JSON.parse(access);if(accessJSON.expiry>getNowTime()){accessToken=accessJSON.value;setAuthenticated(true);}else{setAuthenticated(false);}}function checkAccessTokenExists(){var access=localStorage.getItem('access');// If accessToken not stored, return false\nif(access===null){setAuthenticated(false);return false;}// Parse object in localStorage to JSON\nvar accessJSON=JSON.parse(access);// If accessToken has expired, return false\nif(accessJSON.expiry<getNowTime()){setAuthenticated(false);return false;}// If accessToken value is falsy, return false\nif(!accessJSON.value){setAuthenticated(false);return false;}// If above conditions not met, accessToken is valid. Set it and return true\naccessToken=accessJSON.value;setAuthenticated(true);return true;}function requestAuthLink(){return _requestAuthLink.apply(this,arguments);}function _requestAuthLink(){_requestAuthLink=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data,json,url;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Requesting Auth Link');_context.prev=1;_context.next=4;return fetch(backendAPI+'/auth');case 4:data=_context.sent;_context.next=7;return data.json();case 7:json=_context.sent;url=json.auth;window.location.href=url;// Show Spotify's authorization screen\n_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);setAuthError('Unable to connect to Spotify, please try again!');case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return _requestAuthLink.apply(this,arguments);}function onPageLoad(){if(window.location.search.length>0){handleRedirect();}}function handleRedirect(){if(!verifyAuthorisation()){setAuthError('Spotify account not connected, please try again!');setAuthenticating(false);setAuthenticated(false);navigate('/');return;}setAuthError('');setSetlistError('');var code=getCode();navigate('/');setAuthenticating(true);fetchAccessToken(code);}// Function to verify if user granted authorization on Spotify's auth screen.\nfunction verifyAuthorisation(){// Get url query\nvar queryString=window.location.search;// If no query, return false\nif(queryString.length===0)return false;var urlParams=new URLSearchParams(queryString);var error=urlParams.get('error');// If query contains error parameter (user didnt authorise or other error), return false\nif(error)return false;// Otherwise return true\nreturn true;}function getCode(){var code;var queryString=window.location.search;if(queryString.length>0){var urlParams=new URLSearchParams(queryString);code=urlParams.get('code');}return code;}function fetchAccessToken(_x){return _fetchAccessToken.apply(this,arguments);}function _fetchAccessToken(){_fetchAccessToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(code){var data,json,query1,query2,query;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(backendAPI+'/access');case 2:data=_context2.sent;_context2.next=5;return data.json();case 5:json=_context2.sent;query1=json.query1;query2=json.query2;query=query1+'&code='+code+query2;callAuthorizationApi(query);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchAccessToken.apply(this,arguments);}function callAuthorizationApi(body){var xhr=new XMLHttpRequest();xhr.open(\"POST\",TOKEN,true);xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');xhr.setRequestHeader('Authorization','Basic '+btoa('0d453f304c284edca80fef86ba63f57c'+\":\"+'d4a0686ea42f418a92521bd7e884d221'));xhr.send(body);xhr.onload=handleAuthorizationResponse;}function handleAuthorizationResponse(){if(this.status===200){var data=JSON.parse(this.responseText);var access_token=data.access_token;var refresh_token=data.refresh_token;var expiry=data.expires_in;setAuthenticated(true);setAuthenticating(false);storeAccessToken(access_token,expiry);}else{console.log('Unsucessful Response');console.log(this.responseText);setAuthError('Unable to connect to your Spotify account, please try again');}}function storeAccessToken(key,expiry){var access={value:key,expiry:getNowTime()+(expiry-300)*1000};localStorage.setItem('access',JSON.stringify(access));}function clearPlaylistData(){setPlaylistID();//Not instant\nsetPlaylistLink();//Not instant\nsetUnfoundSongs();//Not instant\nsetCoverSongs();//Not instant\n}function makePlaylistData(setlist){setPlaylistID(setlist.playlistID);//Not instant\nsetPlaylistLink(setlist.playlistLink);//Not instant\nsetUnfoundSongs(setlist.unfoundSongs);//Not instant\nsetCoverSongs(setlist.coverSongs);//Not instant\n}function removeErrors(){setAuthError('');setSetlistError('');}function createPlaylist(_x2){return _createPlaylist.apply(this,arguments);}function _createPlaylist(){_createPlaylist=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url){var setlistID,data,json;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(url.length){_context3.next=2;break;}return _context3.abrupt(\"return\",setSetlistError('No setlist link entered, please try again!'));case 2:if(linkRegex.test(url)){_context3.next=4;break;}return _context3.abrupt(\"return\",setSetlistError('Not a valid setlist.fm link, please try again!'));case 4:if(checkAccessTokenExists()){_context3.next=6;break;}return _context3.abrupt(\"return\",setSetlistError('Your Spotify account is not connected, please try again!'));case 6:setCreatingPlaylist(true);removeErrors();setlistID=parseSetlistLink(url);_context3.prev=9;_context3.next=12;return fetch(backendAPI+'/setlist',{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({setlistID:setlistID,accessToken:accessToken,name:playlistName,description:playlistDescription})});case 12:data=_context3.sent;if(!data.ok){_context3.next=24;break;}_context3.next=16;return data.json();case 16:json=_context3.sent;makePlaylistData(json);navigate('/playlist');setPlaylistName('');setPlaylistDescription('');setCreatingPlaylist(false);_context3.next=26;break;case 24:// Response returned but unsuccesful (playlist not created)\nsetCreatingPlaylist(false);setSetlistError('Unable to create playlist, please ensure your setlist.fm link is correct and try again!');case 26:_context3.next=32;break;case 28:_context3.prev=28;_context3.t0=_context3[\"catch\"](9);// Unable to fetch from backend API\nsetCreatingPlaylist(false);setSetlistError('Unable to connect to Spotify, please try again!');case 32:case\"end\":return _context3.stop();}}},_callee3,null,[[9,28]]);}));return _createPlaylist.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:styles.home,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Instantly create a Spotify playlist from any setlist!\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" All you have to do is paste a setlist link from \",/*#__PURE__*/_jsx(\"a\",{href:\"https://www.setlist.fm\",className:styles.underline,target:\"_blank\",rel:\"noopener noreferrer\",children:\"setlist.fm\"}),\", we look after the rest.\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.searchbar,children:/*#__PURE__*/_jsx(Searchbar,{requestAuthLink:requestAuthLink,createPlaylist:createPlaylist})})]});};export default Home;// Make website offline compatible as seen in: https://www.youtube.com/watch?v=cmGr0RszHc8\n// Handle user clicking enter when searching (use form better)\n// Implement refresh tokens\n// Mobile styling\n// Add screenshots to manifest.json as seen in https://developer.mozilla.org/en-US/docs/Web/Manifest/screenshots\n// Add icons\n// Change names of folders and repos to Spotlist\n// Add comments\n// Test all errors and add further error handling\n// Change logo","map":{"version":3,"names":["useEffect","useContext","useNavigate","styles","Searchbar","linkRegex","backendAPI","AppContext","parseSetlistLink","getNowTime","Home","setPlaylistID","setPlaylistLink","setUnfoundSongs","setCoverSongs","setCreatingPlaylist","playlistName","setPlaylistName","playlistDescription","setPlaylistDescription","setAuthenticated","setAuthenticating","setSetlistError","setAuthError","accessToken","navigate","TOKEN","checkForAccessToken","onPageLoad","access","localStorage","getItem","accessJSON","JSON","parse","expiry","value","checkAccessTokenExists","requestAuthLink","console","log","fetch","data","json","url","auth","window","location","href","search","length","handleRedirect","verifyAuthorisation","code","getCode","fetchAccessToken","queryString","urlParams","URLSearchParams","error","get","query1","query2","query","callAuthorizationApi","body","xhr","XMLHttpRequest","open","setRequestHeader","btoa","send","onload","handleAuthorizationResponse","status","responseText","access_token","refresh_token","expires_in","storeAccessToken","key","setItem","stringify","clearPlaylistData","makePlaylistData","setlist","playlistID","playlistLink","unfoundSongs","coverSongs","removeErrors","createPlaylist","test","setlistID","method","headers","name","description","ok","home","header","underline","searchbar"],"sources":["/Users/frank/code/TOP/repos/sites/spotlist/src/views/home.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/home.module.css';\nimport Searchbar from '../components/searchbar/searchbar';\nimport { linkRegex, backendAPI } from '../variables.js';\nimport { AppContext } from '../App.js';\nimport { parseSetlistLink, getNowTime } from '../methods/methods.js'\n\nconst Home = () => {\n\n  const { setPlaylistID, setPlaylistLink, setUnfoundSongs, setCoverSongs, setCreatingPlaylist, playlistName, setPlaylistName, playlistDescription, setPlaylistDescription, setAuthenticated, setAuthenticating, setSetlistError, setAuthError } = useContext(AppContext);\n\n  let accessToken;\n  const navigate = useNavigate();\n  const TOKEN = \"https://accounts.spotify.com/api/token\";\n\n  useEffect(() => {\n    checkForAccessToken();\n    onPageLoad();\n  }, [])\n\n  function checkForAccessToken() {\n    const access = localStorage.getItem('access');\n    if (access === null) return setAuthenticated(false);\n\n    const accessJSON = JSON.parse(access);\n    if (accessJSON.expiry > getNowTime()) {\n      accessToken = accessJSON.value;\n      setAuthenticated(true);\n    } else {\n      setAuthenticated(false);\n    }\n  }\n\n  function checkAccessTokenExists() {\n    const access = localStorage.getItem('access');\n    // If accessToken not stored, return false\n    if (access === null) {\n      setAuthenticated(false)\n      return false;\n    }\n    // Parse object in localStorage to JSON\n    const accessJSON = JSON.parse(access);\n    // If accessToken has expired, return false\n    if (accessJSON.expiry < getNowTime()) {\n      setAuthenticated(false);\n      return false;\n    }\n    // If accessToken value is falsy, return false\n    if (!accessJSON.value) {\n      setAuthenticated(false);\n      return false;\n    }\n    // If above conditions not met, accessToken is valid. Set it and return true\n    accessToken = accessJSON.value;\n    setAuthenticated(true);\n    return true;\n  }\n\n  async function requestAuthLink() {\n    console.log('Requesting Auth Link');\n    try {\n      const data = await fetch(backendAPI + '/auth');\n      const json = await data.json();\n      const url = json.auth;\n      window.location.href = url; // Show Spotify's authorization screen\n    } catch(error) {\n      setAuthError('Unable to connect to Spotify, please try again!');\n    }\n  }\n\n  function onPageLoad() {\n    if (window.location.search.length > 0) {\n      handleRedirect();\n    }\n  }\n\n  function handleRedirect() {\n    if (!verifyAuthorisation()) {\n      setAuthError('Spotify account not connected, please try again!');\n      setAuthenticating(false);\n      setAuthenticated(false);\n      navigate('/');\n      return;\n    }\n    setAuthError('');\n    setSetlistError('');\n    const code = getCode();\n    navigate('/');\n    setAuthenticating(true);\n    fetchAccessToken(code);\n  }\n\n  // Function to verify if user granted authorization on Spotify's auth screen.\n  function verifyAuthorisation() {\n    // Get url query\n    const queryString = window.location.search;\n    // If no query, return false\n    if (queryString.length === 0) return false;\n    const urlParams = new URLSearchParams(queryString);\n    const error = urlParams.get('error');\n    // If query contains error parameter (user didnt authorise or other error), return false\n    if (error) return false;\n    // Otherwise return true\n    return true;\n  }\n\n  function getCode() {\n    let code;\n    const queryString = window.location.search;\n    if (queryString.length > 0) {\n      const urlParams = new URLSearchParams(queryString);\n      code = urlParams.get('code');\n    }\n    return code;\n  }\n\n  async function fetchAccessToken(code) {\n    const data = await fetch(backendAPI + '/access');\n    const json = await data.json();\n    const query1 = json.query1;\n    const query2 = json.query2;\n    const query = query1 + '&code=' + code + query2;\n    callAuthorizationApi(query);\n  }\n\n  function callAuthorizationApi(body) {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa('0d453f304c284edca80fef86ba63f57c' + \":\" + 'd4a0686ea42f418a92521bd7e884d221'));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n  }\n\n  function handleAuthorizationResponse() {\n    if (this.status === 200) {\n      var data = JSON.parse(this.responseText);\n      let access_token = data.access_token;\n      let refresh_token = data.refresh_token;\n      let expiry = data.expires_in;\n      setAuthenticated(true);\n      setAuthenticating(false);\n      storeAccessToken(access_token, expiry);\n    } else {\n      console.log('Unsucessful Response');\n      console.log(this.responseText);\n      setAuthError('Unable to connect to your Spotify account, please try again');\n    }\n  }\n\n  function storeAccessToken(key, expiry) {\n    const access = {\n      value: key,\n      expiry: getNowTime() + ((expiry - 300) * 1000)\n    }\n    localStorage.setItem('access', JSON.stringify(access));\n  }\n\n  function clearPlaylistData() {\n    setPlaylistID(); //Not instant\n    setPlaylistLink(); //Not instant\n    setUnfoundSongs(); //Not instant\n    setCoverSongs(); //Not instant\n  }\n\n  function makePlaylistData(setlist) {\n    setPlaylistID(setlist.playlistID); //Not instant\n    setPlaylistLink(setlist.playlistLink); //Not instant\n    setUnfoundSongs(setlist.unfoundSongs); //Not instant\n    setCoverSongs(setlist.coverSongs); //Not instant\n  }\n\n  function removeErrors() {\n    setAuthError('');\n    setSetlistError('');\n  }\n\n  async function createPlaylist(url) {\n    if (!url.length) return setSetlistError('No setlist link entered, please try again!');\n    if (!linkRegex.test(url)) return setSetlistError('Not a valid setlist.fm link, please try again!')\n    if (!checkAccessTokenExists()) return setSetlistError('Your Spotify account is not connected, please try again!');\n    setCreatingPlaylist(true);\n    removeErrors();\n    const setlistID = parseSetlistLink(url);\n    try {\n      const data = await fetch(backendAPI + '/setlist', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          setlistID: setlistID,\n          accessToken: accessToken,\n          name: playlistName,\n          description: playlistDescription\n        })\n      })\n      if (data.ok) {\n        const json = await data.json();\n        makePlaylistData(json);\n        navigate('/playlist');\n        setPlaylistName('');\n        setPlaylistDescription('');\n        setCreatingPlaylist(false);\n      } else {\n        // Response returned but unsuccesful (playlist not created)\n        setCreatingPlaylist(false);\n        setSetlistError('Unable to create playlist, please ensure your setlist.fm link is correct and try again!');\n      }\n    } catch(error) {\n      // Unable to fetch from backend API\n      setCreatingPlaylist(false);\n      setSetlistError('Unable to connect to Spotify, please try again!');\n    }\n  }\n\n  return (\n    <div className={styles.home}>\n      <div className={styles.header}>\n        <h2>Instantly create a Spotify playlist from any setlist!</h2>\n        <span> All you have to do is paste a setlist link from <a href='https://www.setlist.fm' className={styles.underline} target='_blank' rel='noopener noreferrer'>setlist.fm</a>, we look after the rest.</span>\n      </div>\n      <div className={styles.searchbar}>\n        <Searchbar requestAuthLink={requestAuthLink} createPlaylist={createPlaylist}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n\n// Make website offline compatible as seen in: https://www.youtube.com/watch?v=cmGr0RszHc8\n// Handle user clicking enter when searching (use form better)\n// Implement refresh tokens\n// Mobile styling\n// Add screenshots to manifest.json as seen in https://developer.mozilla.org/en-US/docs/Web/Manifest/screenshots\n// Add icons\n// Change names of folders and repos to Spotlist\n// Add comments\n// Test all errors and add further error handling\n// Change logo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}