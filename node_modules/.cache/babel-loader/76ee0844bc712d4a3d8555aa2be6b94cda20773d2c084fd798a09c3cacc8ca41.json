{"ast":null,"code":"var _jsxFileName = \"/Users/frank/code/TOP/repos/sites/setlist/client/src/components/searchbar/searchbar-options.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { AppContext } from '../../App.js';\nimport styles from '../../styles/searchbar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Options = () => {\n  _s();\n  const {\n    playlistName,\n    setPlaylistName,\n    playlistDescription,\n    setPlaylistDescription\n  } = useContext(AppContext);\n  const [showOptions, setShowOptions] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.options,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.name,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name-searchbar\",\n        children: \"Playlist Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name-searchbar\",\n        id: \"name-searchbar\",\n        maxLength: \"100\",\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        placeholder: \" \",\n        value: playlistName,\n        onChange: e => setPlaylistName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.name,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description-searchbar\",\n        children: \"Playlist Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description-searchbar\",\n        id: \"description-searchbar\",\n        maxLength: \"300\",\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        placeholder: \" \",\n        value: playlistDescription,\n        onChange: e => setPlaylistDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_s(Options, \"5SEIeP+LksMlsmnkN4BYsJtDqi4=\");\n_c = Options;\nexport default Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["useState","useContext","AppContext","styles","Options","playlistName","setPlaylistName","playlistDescription","setPlaylistDescription","showOptions","setShowOptions","options","name","e","target","value"],"sources":["/Users/frank/code/TOP/repos/sites/setlist/client/src/components/searchbar/searchbar-options.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { AppContext } from '../../App.js';\nimport styles from '../../styles/searchbar.module.css';\n\nconst Options = () => {\n\n  const { playlistName, setPlaylistName, playlistDescription, setPlaylistDescription } = useContext(AppContext);\n\n  const [showOptions, setShowOptions] = useState(false);\n\n  return (\n      <div className={styles.options}>\n        <div className={styles.name}>\n          <label htmlFor=\"name-searchbar\">Playlist Name:</label>\n          <input\n            type=\"text\"\n            name=\"name-searchbar\"\n            id=\"name-searchbar\"\n            maxLength=\"100\"\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            value={playlistName}\n            onChange={(e) => setPlaylistName(e.target.value)}\n          />\n        </div>\n        <div className={styles.name}>\n          <label htmlFor=\"description-searchbar\">Playlist Description:</label>\n          <input\n          type=\"text\"\n          name=\"description-searchbar\"\n          id=\"description-searchbar\"\n          maxLength=\"300\"\n          spellCheck=\"false\"\n          autoComplete=\"off\"\n          placeholder=\" \"\n          value={playlistDescription}\n          onChange={(e) => setPlaylistDescription(e.target.value)}\n          />\n        </div>\n      </div>\n  )\n}\n\nexport default Options\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,MAAM,MAAM,mCAAmC;AAAC;AAEvD,MAAMC,OAAO,GAAG,MAAM;EAAA;EAEpB,MAAM;IAAEC,YAAY;IAAEC,eAAe;IAAEC,mBAAmB;IAAEC;EAAuB,CAAC,GAAGP,UAAU,CAACC,UAAU,CAAC;EAE7G,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,oBACI;IAAK,SAAS,EAAEG,MAAM,CAACQ,OAAQ;IAAA,wBAC7B;MAAK,SAAS,EAAER,MAAM,CAACS,IAAK;MAAA,wBAC1B;QAAO,OAAO,EAAC,gBAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACtD;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,gBAAgB;QACrB,EAAE,EAAC,gBAAgB;QACnB,SAAS,EAAC,KAAK;QACf,UAAU,EAAC,OAAO;QAClB,YAAY,EAAC,KAAK;QAClB,WAAW,EAAC,GAAG;QACf,KAAK,EAAEP,YAAa;QACpB,QAAQ,EAAGQ,CAAC,IAAKP,eAAe,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACjD;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAEZ,MAAM,CAACS,IAAK;MAAA,wBAC1B;QAAO,OAAO,EAAC,uBAAuB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA8B,eACpE;QACA,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,uBAAuB;QAC5B,EAAE,EAAC,uBAAuB;QAC1B,SAAS,EAAC,KAAK;QACf,UAAU,EAAC,OAAO;QAClB,YAAY,EAAC,KAAK;QAClB,WAAW,EAAC,GAAG;QACf,KAAK,EAAEL,mBAAoB;QAC3B,QAAQ,EAAGM,CAAC,IAAKL,sBAAsB,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACtD;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAA,GAtCKX,OAAO;AAAA,KAAPA,OAAO;AAwCb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}