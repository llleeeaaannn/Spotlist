{"ast":null,"code":"var _jsxFileName = \"/Users/frank/code/TOP/repos/sites/setlist/client/src/views/home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from '../styles/home.module.css';\nimport Searchbar from '../components/searchbar/searchbar';\nimport { AppContext } from '../App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    playlistID,\n    setPlaylistID,\n    playlistLink,\n    setPlaylistLink,\n    unfoundSongs,\n    setUnfoundSongs\n  } = useContext(AppContext);\n  let access_token;\n  let refresh_token;\n  const TOKEN = \"https://accounts.spotify.com/api/token\";\n  const navigate = useNavigate();\n  useEffect(() => {\n    onPageLoad();\n  }, []);\n  async function requestAuthLink() {\n    const data = await fetch('http://localhost:4000/auth');\n    const json = await data.json();\n    console.log(json.auth);\n    const url = json.auth;\n    window.location.href = url; // Show Spotify's authorization screen\n  }\n\n  function onPageLoad() {\n    console.log('Page Loaded');\n    if (window.location.search.length > 0) {\n      handleRedirect();\n    }\n  }\n  function handleRedirect() {\n    let code = getCode();\n    fetchAccessToken(code);\n  }\n  function getCode() {\n    let code;\n    const queryString = window.location.search;\n    if (queryString.length > 0) {\n      const urlParams = new URLSearchParams(queryString);\n      code = urlParams.get('code');\n    }\n    return code;\n  }\n  async function fetchAccessToken(code) {\n    const data = await fetch('http://localhost:4000/access');\n    const json = await data.json();\n    const query1 = json.query1;\n    const query2 = json.query2;\n    const query = query1 + '&code=' + code + query2;\n    callAuthorizationApi(query);\n  }\n  function callAuthorizationApi(body) {\n    console.log('Fetching Access Token');\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa('0d453f304c284edca80fef86ba63f57c' + \":\" + 'd4a0686ea42f418a92521bd7e884d221'));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n  }\n  function handleAuthorizationResponse() {\n    if (this.status === 200) {\n      var data = JSON.parse(this.responseText);\n      access_token = data.access_token;\n      refresh_token = data.refresh_token;\n      console.log(access_token);\n      console.log(refresh_token);\n      // onPageLoad();\n    } else {\n      console.log('Unsucessful Response');\n      console.log(this.responseText);\n    }\n  }\n  async function createPlaylist(url) {\n    console.log(url);\n    let urlArray = url.split('-');\n    let urlLast = urlArray.pop();\n    let setlistID = urlLast.split('.')[0];\n    console.log(setlistID);\n    console.log('Creating Playlist');\n    const data = await fetch('http://localhost:4000/setlist/' + setlistID, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + spotifyKey\n      },\n      body: JSON.stringify({\n        'setlistID': setlistID,\n        'description': req.playlistDescription,\n        'public': publicPlaylist\n      })\n    });\n    const json = await data.json();\n    console.log(json);\n    setPlaylistID(json.playlistID); //Not instant\n    setPlaylistLink(json.playlistLink); //Not instant\n    // setUnfoundSongs(json.unfoundSongs); //Not instant\n    setUnfoundSongs(['Random', 'Songs', 'For Testing the array']);\n    // window.location.href = 'http://localhost:3000/playlist';\n    navigate('/playlist');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instantly create a Spotify playlist from any setlist!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" All you have to do is paste the link from setlist.fm, we look after the rest.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchbar,\n      children: /*#__PURE__*/_jsxDEV(Searchbar, {\n        requestAuthLink: requestAuthLink,\n        createPlaylist: createPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/about\",\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"In0BbWd63qBvhz/+ikR24ZVxiRc=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\n\n// Handle user not approving access in Spotify auth flow: https://developer.spotify.com/documentation/general/guides/authorization/code-flow/ (Under response)\n// Change show dialog to false in production to prevent need for keep signing in\n// Error Handling for:\n// No or invalid URL/link when searching\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useContext","Link","useNavigate","styles","Searchbar","AppContext","Home","playlistID","setPlaylistID","playlistLink","setPlaylistLink","unfoundSongs","setUnfoundSongs","access_token","refresh_token","TOKEN","navigate","onPageLoad","requestAuthLink","data","fetch","json","console","log","auth","url","window","location","href","search","length","handleRedirect","code","getCode","fetchAccessToken","queryString","urlParams","URLSearchParams","get","query1","query2","query","callAuthorizationApi","body","xhr","XMLHttpRequest","open","setRequestHeader","btoa","send","onload","handleAuthorizationResponse","status","JSON","parse","responseText","createPlaylist","urlArray","split","urlLast","pop","setlistID","method","headers","spotifyKey","stringify","req","playlistDescription","publicPlaylist","home","header","searchbar"],"sources":["/Users/frank/code/TOP/repos/sites/setlist/client/src/views/home.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from '../styles/home.module.css';\nimport Searchbar from '../components/searchbar/searchbar';\nimport { AppContext } from '../App.js';\n\nconst Home = () => {\n\n  const { playlistID, setPlaylistID, playlistLink, setPlaylistLink, unfoundSongs, setUnfoundSongs } = useContext(AppContext);\n\n  let access_token;\n  let refresh_token;\n\n  const TOKEN = \"https://accounts.spotify.com/api/token\";\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    onPageLoad()\n  }, [])\n\n  async function requestAuthLink(){\n    const data = await fetch('http://localhost:4000/auth');\n    const json = await data.json();\n    console.log(json.auth);\n    const url = json.auth;\n    window.location.href = url; // Show Spotify's authorization screen\n  }\n\n  function onPageLoad() {\n    console.log('Page Loaded');\n    if (window.location.search.length > 0) {\n      handleRedirect();\n    }\n  }\n\n  function handleRedirect() {\n    let code = getCode();\n    fetchAccessToken(code);\n  }\n\n  function getCode() {\n    let code;\n    const queryString = window.location.search;\n    if (queryString.length > 0) {\n      const urlParams = new URLSearchParams(queryString);\n      code = urlParams.get('code');\n    }\n    return code;\n  }\n\n  async function fetchAccessToken(code) {\n    const data = await fetch('http://localhost:4000/access');\n    const json = await data.json();\n    const query1 = json.query1;\n    const query2 = json.query2;\n    const query = query1 + '&code=' + code + query2;\n    callAuthorizationApi(query);\n  }\n\n  function callAuthorizationApi(body) {\n    console.log('Fetching Access Token');\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa('0d453f304c284edca80fef86ba63f57c' + \":\" + 'd4a0686ea42f418a92521bd7e884d221'));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n  }\n\n  function handleAuthorizationResponse() {\n    if (this.status === 200) {\n      var data = JSON.parse(this.responseText);\n      access_token = data.access_token;\n      refresh_token = data.refresh_token;\n      console.log(access_token);\n      console.log(refresh_token);\n      // onPageLoad();\n    }\n    else {\n      console.log('Unsucessful Response');\n      console.log(this.responseText);\n    }\n  }\n\n  async function createPlaylist(url) {\n    console.log(url);\n    let urlArray = url.split('-');\n    let urlLast = urlArray.pop();\n    let setlistID = urlLast.split('.')[0];\n    console.log(setlistID);\n    console.log('Creating Playlist');\n    const data = await fetch('http://localhost:4000/setlist/' + setlistID, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + spotifyKey\n      },\n      body: JSON.stringify({\n        'setlistID': setlistID,\n        'description': req.playlistDescription,\n        'public': publicPlaylist\n      })\n    });\n    const json = await data.json();\n    console.log(json);\n    setPlaylistID(json.playlistID); //Not instant\n    setPlaylistLink(json.playlistLink); //Not instant\n    // setUnfoundSongs(json.unfoundSongs); //Not instant\n    setUnfoundSongs(['Random', 'Songs', 'For Testing the array']);\n    // window.location.href = 'http://localhost:3000/playlist';\n    navigate('/playlist');\n  }\n\n\n  return (\n    <div className={styles.home}>\n      <div className={styles.header}>\n        <h2>Instantly create a Spotify playlist from any setlist!</h2>\n        <span> All you have to do is paste the link from setlist.fm, we look after the rest.</span>\n      </div>\n      <div className={styles.searchbar}>\n        <Searchbar requestAuthLink={requestAuthLink} createPlaylist={createPlaylist}/>\n      </div>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  )\n}\n\nexport default Home;\n\n// Handle user not approving access in Spotify auth flow: https://developer.spotify.com/documentation/general/guides/authorization/code-flow/ (Under response)\n// Change show dialog to false in production to prevent need for keep signing in\n// Error Handling for:\n// No or invalid URL/link when searching\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}